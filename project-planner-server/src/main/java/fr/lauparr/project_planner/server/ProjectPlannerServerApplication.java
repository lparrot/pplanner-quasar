package fr.lauparr.project_planner.server;

import fr.lauparr.project_planner.server.model.Projet;
import fr.lauparr.project_planner.server.model.Utilisateur;
import fr.lauparr.project_planner.server.model.UtilisateurDetails;
import fr.lauparr.project_planner.server.repository.ProjetRepository;
import fr.lauparr.project_planner.server.repository.UtilisateurRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.security.crypto.password.PasswordEncoder;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.Base64;
import java.util.List;

@SpringBootApplication
public class ProjectPlannerServerApplication implements CommandLineRunner {

    private final PasswordEncoder passwordEncoder;
    private final ProjetRepository projetRepository;
    private final UtilisateurRepository utilisateurRepository;

    @Autowired
    public ProjectPlannerServerApplication(ProjetRepository projetRepository, UtilisateurRepository utilisateurRepository, PasswordEncoder passwordEncoder) {
        this.projetRepository = projetRepository;
        this.utilisateurRepository = utilisateurRepository;
        this.passwordEncoder = passwordEncoder;
    }

    public static void main(String[] args) {
        SpringApplication.run(ProjectPlannerServerApplication.class, args);
    }

    @Override
    public void run(String... args) throws Exception {

        Utilisateur user1 = creerUtilisateur("lparrot", "Parrot", "Laurent", "kestounet@gmail.com", LocalDate.of(1983, 9, 5), "CDAD-R", "06 48 09 11 32", "06 48 09 11 32");
        Utilisateur user2 = creerUtilisateur("aparrot", "Parrot", "Anne", "patesdegeek@gmail.com", LocalDate.of(1982, 7, 13), "Maison Rambouillet", "01 23 45 67 89", "01 23 45 67 89");
        Utilisateur user3 = creerUtilisateur("ebauduin", "Bauduin", "Edith", "edith.bauduin@gmail.com", LocalDate.of(1960, 3, 17), "Maison Guesnain", "98 76 54 32 10", "98 76 54 32 10");

      byte[] logo1 = Base64.getDecoder().decode("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");
      byte[] logo2 = Base64.getDecoder().decode("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");
      byte[] logo3 = Base64.getDecoder().decode("");

        List<Projet> projets = Arrays.asList(
                new Projet("CCS", "Carte de Circulation Sécurisée", logo1, user1),
                new Projet("VDD", "Valise Diplomatique Défense", logo2, user1),
                new Projet("PRDV", "Eureka Module Prise de Rendez-Vous", logo3, user2)
        );

        projetRepository.saveAll(projets);
    }

    private Utilisateur creerUtilisateur(String username, String nom, String prenom, String email, LocalDate dateNaissance, String compagnie, String fixe, String portable) {
        Utilisateur utilisateur = new Utilisateur();
        UtilisateurDetails details = new UtilisateurDetails();
        utilisateur.setUsername(username);
        utilisateur.setPassword(passwordEncoder.encode("123"));
        details.setNom(nom);
        details.setPrenom(prenom);
        details.setEmail(email);
        details.setDateNaissance(dateNaissance);
        details.setCompagnie(compagnie);
        details.setFixe(fixe);
        details.setPortable(portable);
        utilisateur.setDetails(details);

        return utilisateurRepository.save(utilisateur);
    }
}
